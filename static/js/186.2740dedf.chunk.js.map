{"version":3,"file":"static/js/186.2740dedf.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,UACdF,EADc,oCACsBD,IAFpC,cACCI,EADD,yBAKEA,EAAKC,KAAKC,SALZ,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAsCC,GAAtC,uFACcL,EAAAA,EAAAA,IAAA,UACdF,EADc,gCACkBD,EADlB,kBACmCQ,IAFjD,cACCJ,EADD,yBAKEA,EAAKC,KAAKC,SALZ,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0CC,GAA1C,uFACcP,EAAAA,EAAAA,IAAA,UACdF,EADc,iBACGS,EADH,oBACsBV,EADtB,oBADd,cACCI,EADD,yBAKEA,EAAKC,MALP,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0CD,GAA1C,uFACcP,EAAAA,EAAAA,IAAA,UACdF,EADc,iBACGS,EADH,4BAC8BV,EAD9B,oBADd,cACCI,EADD,yBAKEA,EAAKC,MALP,kEAQA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA0CF,GAA1C,uFACcP,EAAAA,EAAAA,IAAA,UACdF,EADc,iBACGS,EADH,4BAC8BV,EAD9B,oBADd,cACCI,EADD,yBAKEA,EAAKC,MALP,kE,qDCrBP,IAbe,WACb,OACE,gBACEQ,MAAO,CACLC,QAAS,OACTC,aAAc,UAHlB,UAME,SAAC,KAAD,CAAUC,MAAM,YAAYC,OAAO,IAAIC,OAAQ,GAAIC,MAAO,MAG/D,C,8JCTYC,EAAU,WACrB,IAAQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GAEb,IAAME,EAAkB,mCAAG,8GAEQhB,EAAAA,EAAAA,IAA2BF,GAFnC,OAEjBmB,EAFiB,OAGvBL,EAAWK,EAAiBvB,SAHL,gDAKvBwB,QAAQC,IAAR,MALuB,yBAOvBL,GAAa,GAPU,4EAAH,qDAWxBE,GACD,GAAE,CAAClB,KAGF,gCACGe,IAAa,SAAC,IAAD,IACbF,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,mFAIP,C","sources":["Api/apiService.js","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f42f2f62d598d39d316744d8859de3e9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function apiServiceGetTrending() {\n  const resp = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n\n  return resp.data.results;\n}\n\nexport async function apiServiceSearchMovies(query) {\n  const resp = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return resp.data.results;\n}\n\nexport async function apiServiceGetMoviesDetails(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return resp.data;\n}\n\nexport async function apiServiceGetMoviesCredits(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return resp.data;\n}\n\nexport async function apiServiceGetMoviesReviews(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return resp.data;\n}\n","import React from 'react';\nimport { TailSpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'grid',\n        placeContent: 'center',\n      }}\n    >\n      <TailSpin color=\"#3d6fcce2\" radius=\"9\" height={50} width={50} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiServiceGetMoviesReviews } from '../../Api/apiService';\nimport Loader from '../Loader/Loader';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getMoviesReviewsID = async () => {\n      try {\n        const getMoviesReviews = await apiServiceGetMoviesReviews(movieId);\n        setReviews(getMoviesReviews.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMoviesReviewsID();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>Author {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie ðŸ˜¯</p>\n      )}\n    </>\n  );\n};\n"],"names":["API_KEY","BASE_URL","apiServiceGetTrending","axios","resp","data","results","apiServiceSearchMovies","query","apiServiceGetMoviesDetails","movieId","apiServiceGetMoviesCredits","apiServiceGetMoviesReviews","style","display","placeContent","color","radius","height","width","Reviews","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getMoviesReviewsID","getMoviesReviews","console","log","length","map","review","author","content","id"],"sourceRoot":""}