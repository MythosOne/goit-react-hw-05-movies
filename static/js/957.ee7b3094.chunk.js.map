{"version":3,"file":"static/js/957.ee7b3094.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,UACdF,EADc,oCACsBD,IAFpC,cACCI,EADD,yBAKEA,EAAKC,KAAKC,SALZ,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAsCC,GAAtC,uFACcL,EAAAA,EAAAA,IAAA,UACdF,EADc,gCACkBD,EADlB,kBACmCQ,IAFjD,cACCJ,EADD,yBAKEA,EAAKC,KAAKC,SALZ,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0CC,GAA1C,uFACcP,EAAAA,EAAAA,IAAA,UACdF,EADc,iBACGS,EADH,oBACsBV,EADtB,oBADd,cACCI,EADD,yBAKEA,EAAKC,MALP,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0CD,GAA1C,uFACcP,EAAAA,EAAAA,IAAA,UACdF,EADc,iBACGS,EADH,4BAC8BV,EAD9B,oBADd,cACCI,EADD,yBAKEA,EAAKC,MALP,kEAQA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA0CF,GAA1C,uFACcP,EAAAA,EAAAA,IAAA,UACdF,EADc,iBACGS,EADH,4BAC8BV,EAD9B,oBADd,cACCI,EADD,yBAKEA,EAAKC,MALP,kE,qDCrBP,IAbe,WACb,OACE,gBACEQ,MAAO,CACLC,QAAS,OACTC,aAAc,UAHlB,UAME,SAAC,KAAD,CAAUC,MAAM,YAAYC,OAAO,IAAIC,OAAQ,GAAIC,MAAO,MAG/D,C,+KCZYC,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1B,OACE,+BACE,iBAAKR,MAAO,CAAEC,QAAS,OAAQQ,IAAK,OAAQC,UAAW,QAAvD,WACE,gBACEC,IAAG,yCAAoCH,EAAUI,aACjDC,IAAKL,EAAUM,SAEjB,4BACE,wBAAKN,EAAUM,SACf,2CACeC,KAAKC,MAA+B,GAAzBR,EAAUS,cAAqB,QAEzD,4CACA,0BAAOT,EAAUU,kBACjB,sCACA,0BAAOV,EAAUW,kBAK1B,E,SCfKC,GAAWC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,6IAUDE,EAAe,WAAO,IAAD,IAChC,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACQ7B,GAAY8B,EAAAA,EAAAA,MAAZ9B,QACR,GAAkC2B,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAMC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAmB3C,OAjBAC,EAAAA,EAAAA,YAAU,WACRP,GAAa,GAEb,IAAMQ,EAAa,mCAAG,8GAEMzC,EAAAA,EAAAA,IAA2BC,GAFjC,OAEZW,EAFY,OAGlBkB,EAASlB,GAHS,gDAKlB8B,QAAQC,IAAR,MALkB,yBAOlBV,GAAa,GAPK,4EAAH,qDAWnBQ,GACD,GAAE,CAACxC,KAGF,iCACE,SAACuB,EAAD,CAAUoB,GAAIR,EAAIS,QAAlB,6BACChB,IAAS,SAAClB,EAAD,CAAWC,UAAWiB,KAChC,2BACE,yBACE,SAAC,KAAD,CAAMe,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,IACCZ,IAAa,SAACc,EAAA,EAAD,MAGnB,C","sources":["Api/apiService.js","components/Loader/Loader.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f42f2f62d598d39d316744d8859de3e9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function apiServiceGetTrending() {\n  const resp = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n\n  return resp.data.results;\n}\n\nexport async function apiServiceSearchMovies(query) {\n  const resp = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return resp.data.results;\n}\n\nexport async function apiServiceGetMoviesDetails(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return resp.data;\n}\n\nexport async function apiServiceGetMoviesCredits(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return resp.data;\n}\n\nexport async function apiServiceGetMoviesReviews(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return resp.data;\n}\n","import React from 'react';\nimport { TailSpin } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'grid',\n        placeContent: 'center',\n      }}\n    >\n      <TailSpin color=\"#3d6fcce2\" radius=\"9\" height={50} width={50} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movieInfo }) => {\n  return (\n    <>\n      <div style={{ display: 'flex', gap: '20px', marginTop: '10px' }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w200${movieInfo.poster_path}`}\n          alt={movieInfo.title}\n        />\n        <div>\n          <h2>{movieInfo.title}</h2>\n          <span>\n            User score: {Math.round(movieInfo.vote_average * 10) + '%'}\n          </span>\n          <h3>Original Title</h3>\n          <span>{movieInfo.original_title}</span>\n          <h3>Overview</h3>\n          <span>{movieInfo.overview}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movieInfo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { apiServiceGetMoviesDetails } from '../Api/apiService';\nimport { useState, useEffect } from 'react';\nimport { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport Loader from '../components/Loader/Loader';\nimport styled from 'styled-components';\n\nconst BackLink = styled(Link)`\n  text-decoration: none;\n  font-weight: 700;\n  color: #000000;\n  &:focus,\n  &:hover {\n    color: #3f51b5;\n  }\n`;\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  const ref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getMoviesByID = async () => {\n      try {\n        const movieInfo = await apiServiceGetMoviesDetails(movieId);\n        setMovie(movieInfo);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMoviesByID();\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={ref.current}> ‚Üê Go back</BackLink>\n      {movie && <MovieCard movieInfo={movie} />}\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n      {isLoading && <Loader />}\n    </>\n  );\n};\n"],"names":["API_KEY","BASE_URL","apiServiceGetTrending","axios","resp","data","results","apiServiceSearchMovies","query","apiServiceGetMoviesDetails","movieId","apiServiceGetMoviesCredits","apiServiceGetMoviesReviews","style","display","placeContent","color","radius","height","width","MovieCard","movieInfo","gap","marginTop","src","poster_path","alt","title","Math","round","vote_average","original_title","overview","BackLink","styled","Link","MovieDetails","useState","movie","setMovie","useParams","isLoading","setIsLoading","location","useLocation","ref","useRef","state","from","useEffect","getMoviesByID","console","log","to","current","Loader"],"sourceRoot":""}